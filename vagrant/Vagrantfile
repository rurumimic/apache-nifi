# -*- mode: ruby -*-
# vi: set ft=ruby :

$num_instances = 1
$instance_name_prefix = "node"
$forwarded_ports = {
  8080 => 8080,
  8443 => 8443
}

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/focal64"

  (1..$num_instances).each do |i|
    config.vm.define vm_name = "%s%d" % [$instance_name_prefix, i] do |config|
      config.vm.hostname = vm_name

      $forwarded_ports.each do |guest, host|
        config.vm.network "forwarded_port", guest: guest, host: host, auto_correct: true
      end

      ip = "192.168.51.#{i+100}"
      config.vm.network :private_network, ip: ip

      config.vm.synced_folder "./share", "/share"
      config.vm.provider "virtualbox" do |vb|
        vb.cpus = "2"
        vb.memory = "2048"
      end

      # Update ca certs
      config.vm.synced_folder "./certs", "/certs"
      config.vm.provision "shell" do |s|
        s.path = "https://raw.githubusercontent.com/rurumimic/no-check-certificate/main/ubuntu/focal64/update-certs.sh"
      end

      config.vm.provision "shell", inline: <<-SHELL
        # Install JDK 11
        apt-get update
        apt-get install -y openjdk-11-jdk-headless
        echo 'export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64' >> /etc/.profile
      SHELL
        
      config.vm.provision "shell", inline: <<-SHELL
        # Create NiFi user and group
        groupadd nifi
        useradd -m -g nifi -s /bin/bash nifi
      SHELL

      config.vm.provision "shell", inline: <<-SHELL
        # Add a systemd file
        cat <<EOF | tee /etc/systemd/system/nifi.service
        [Unit]
        Description=Apache NiFi
        Requires=network.target remote-fs.target
        After=network.target remote-fs.target
        
        [Service]
        Type=forking
        User=nifi
        Group=nifi
        ExecStart=/opt/nifi/current/bin/nifi.sh start
        ExecStop=/opt/nifi/current/bin/nifi.sh stop
        ExecReload=/opt/nifi/current/bin/nifi.sh restart
        
        [Install]
        WantedBy=multi-user.target
        EOF
      SHELL

    end
  end

end
